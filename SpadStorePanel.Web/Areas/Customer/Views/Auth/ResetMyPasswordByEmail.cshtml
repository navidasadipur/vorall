@model SpadStorePanel.Web.ViewModels.ForgotPasswordViewModel

@{
    ViewBag.Title = "فراموشی رمز عبور";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<div class="col-lg-12">
    <div class="card card-custom gutter-b">
        @using (Html.BeginForm("ResetMyPassword", "Dashboard", FormMethod.Post, new { id = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <input type="hidden" name="UserId" id="UserId" value="@ViewBag.UserId" />
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OldPassword, new { })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control " } })
                                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "form-text text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, new { })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control " } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "form-text text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, new { })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control " } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "form-text text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <input type="submit" value="ثبت" class="btn btn-primary mr-2" />
            </div>
        }
    </div>
</div>*@


<!-- start page-title -->
<section class="page-title">
    <div class="container">
        <div class="row">
            <div class="col col-xs-12">
                <h2>@ViewBag.Title</h2>
            </div>
        </div> <!-- end row -->
    </div> <!-- end container -->
</section>
<!-- end page-title -->
<!-- start blog-single-section -->
<section class="form-section">
    <div class="container">
        <div class="row">
            <div class="col col-md-8 col-md-offset-2">
                @{
                    if (ViewBag.RegisterError != null)
                    {
                        <div class="alert alert-danger">
                            <strong>خطا!</strong> @ViewBag.RegisterError
                        </div>
                    }
                }
                <div class="comment-respond form-box">
                    <h3 class="form-title">@ViewBag.Title</h3>
                    @*<form method="post" id="commentform" class="comment-form">*@
                    @using (Html.BeginForm("ResetMyPasswordByEmail", "Auth", FormMethod.Post, new { id = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="recruitment-form">
                            <div class="flex-form-login">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control ", @placeholder = "ایمیل خود را وارد کنید", @type = "email", autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "" })
                            </div>

                        </div>

                        <div class="form-submit btn-form">
                            <input id="submit" value="تایید" type="submit">
                        </div>
                    }


                </div>
            </div>
        </div>
    </div> <!-- end container -->
</section>
<!-- end blog-single-section -->


<style>
    .field-validation-error span {
        color: darkred;
    }
</style>
<script>
    $.validator.unobtrusive.parse("#form");
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        new KTImageInput('user-avatar');
    </script>
}

