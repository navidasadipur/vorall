@model SpadStorePanel.Web.ViewModels.ProductListViewModel
@{
    ViewBag.Title = "فروشگاه";
    Layout = "~/Views/Shared/LayoutClient.cshtml";
}

@Html.Action("HeaderShareSection", "Home")
<!-- Start Breadcrumbs Section -->
<section class="breadcrumbs-section background_bg" data-img-src="/pic/bg-4-1.png">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page_title text-center">
                    <h1>@ViewBag.Title</h1>
                    <ul class="breadcrumb justify-content-center">
                        <li><a href="/">صفحه اصلی</a></li>
                        <li><a href="#">@ViewBag.Title</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Start Shop Section -->
<section class="pt_large pb_large shop-inner-section">
    <div class="container">
        <div class="row">

            <!--Start Product Grid-->
            <div id="grid" class="col-xl-9 col-lg-8 col-md-12">

                
            </div>
            <!--End Product Grid-->


            <div class="col-xl-3 col-lg-4 col-md-12 order-lg-first">
                <div class="shop-sidebar">
                    @Html.Action("CategorySection", "Shop")
                    @Html.Action("PriceSection", "Shop")
                    @Html.Action("ColorsSection", "Shop")
                    @Html.Action("NewProductSection", "Shop")
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Shop Section -->


@section script
{
    <script>
        $("#setPrice").click(function () {
            var price = $("#amount").val().replace("از", "").replace("تا", "").split("-");
            window.location.href = "/Shop/SetPrice?min=" + price[0] + "&Max=" + price[1];
        });
    </script>


    <script>
        const urlParams = new URLSearchParams(window.location.search);
        const page = urlParams.get('page');
        if (page == null) {
            var items = document.getElementsByClassName("pageNumber");
            for (var i = 0; i < items.length; i++) {
                if (items[i].textContent == 1) {
                    items[i].style.backgroundColor = '#2ab7ca';
                    items[i].style.color = '#fff';
                }
            }

        }
        else {
            var items = document.getElementsByClassName("pageNumber");
            for (var i = 0; i < items.length; i++) {
                if (items[i].textContent == page) {
                    items[i].style.backgroundColor = '#2ab7ca';
                    items[i].style.color = '#fff';
                    items[i].classList.add("active");
                }
            }
        }

        function myFunction() {
            const urlParams = new URLSearchParams(window.location.search);
            const page = urlParams.get('page');
            if (page == null) {
                var p = Number(1) + 1;
                window.location.href = '/Shop?page=' + p;
            }
            else {
                var p = Number(page) + 1;
                window.location.href = '/Shop?page=' + p;
            }
        }


        var pageCount = document.getElementsByClassName("pageNumber").length;
        if (Number(page) == pageCount) {
            document.getElementById("next").style.display = "none";
        }

    </script>

    <script>
        var brandIds = null;
        var groupIds = null;
        var productIds = null;
    </script>

    @if (ViewBag.brandIds != null)
    {
        <script>
            brandIds = "@ViewBag.BrandIds";
        </script>
    }
    @if (ViewBag.groupIds != null)
    {
        <script>
            groupIds = "@ViewBag.GroupIds";
        </script>
    }
    @if (ViewBag.productIds != null)
    {
        <script>
            productIds = "@ViewBag.ProductIds";
        </script>
    }
    <script>
        var selectedGroupId = @Model.SelectedGroupId;

        function GetGrid(page, groupId) {
            $("#loading").show();
            var pageNumber = 1;
            if (page != null) {
                pageNumber = page;
            }
            var sort = $("#sort").find(":selected").val();
            var take = $("#take").find(":selected").val();
            var categoryId = groupId !== undefined ? groupId : null;
            categoryId = categoryId === null ? selectedGroupId : categoryId;
            var searchString =  '@ViewBag.SearchString';
            var brands = [];
            var priceFrom = null;
            var priceTo = null;
            var selectedPriceRange = $("span#filter-price-range").text().replaceAll("تومان", "");
            if (selectedPriceRange != undefined) {
                var priceRangeArr = selectedPriceRange.split('-');
                 console.log(priceRangeArr);
                if (parseInt(priceRangeArr[0]) > 0) {
                    priceFrom = parseInt(priceRangeArr[0]);
                    console.log(priceFrom);
                }
                if (parseInt(priceRangeArr[1]) > 0) {
                    priceTo = parseInt(priceRangeArr[1]);
                    console.log(priceTo);
                }
            }

            $("input[name='brands']").map(function() {
                if ($(this).prop("checked") === true) {
                    brands.push(parseInt($(this).val()));
                }
            });
            var subFeatures = [];
            $("[name='subFeatures']").map(function() {
                if ($(this).prop("checked") === true) {
                    subFeatures.push(parseInt($(this).val()));
                }
            });
            var grid = {
                categoryId: categoryId,
                searchString: searchString,
                priceFrom: priceFrom,
                priceTo: priceTo,
                brands: brands.join('-'),
                subFeatures: subFeatures.join('-'),
                pageNumber: pageNumber,
                take: take,
                sort: sort,
                BrandIds: brandIds,
                GroupIds: groupIds,
                ProductIds: productIds,
            }
            $.ajax({
                type: 'GET',
                url: '/Shop/ProductsGrid',
                data: grid,
                success: function(data) {
                    $("#grid").html(data);
                },
                error: function(data) {
                    console.log("error");
                    console.log(data);
                },
                complete: function() {
                    $("#loading").hide();
                }
            });
        }

        $(document).ready(function() {
            GetGrid();

            //$("#filter-price-range").on('DOMSubtreeModified', function () {
            //    alert("Span HTML is now " + $(this).html());
            //    GetGrid();
            //});

            // Update Price Range
            $('#price-slider').mouseup(function () {
                GetGrid();
            });

            document.getElementById("reload").onclick = function() {reload()};


        });
                function reload() {
                window.location = window.location.href.split("?")[0];
            }

                    function CheckPriceUpdated() {
        var newMintxt = $('.from').text();
        var newMaxtxt = $('.to').text();

        var newMin = newMintxt.substring(1);
        var newMax = newMaxtxt.substring(1);

        if (newMin != minPrice || newMax != maxPrice) {
            minPrice = newMin;
            maxPrice = newMax;

            searchString = "";
            $('.search-field').val(searchString);

            submitForm();
        }
    }
    </script>
}